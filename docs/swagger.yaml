definitions:
  model.AddUser:
    properties:
      password:
        type: string
      userID:
        type: string
    type: object
  model.Login:
    properties:
      password:
        type: string
      userID:
        type: string
    type: object
  model.Movies:
    properties:
      Location:
        type: string
      Name:
        type: string
      Title:
        type: string
    type: object
  model.Token:
    properties:
      token:
        type: string
      type:
        type: string
    type: object
host: localhost:1909
info:
  contact:
    email: haupham404
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /addmovies:
    post:
      consumes:
      - application/json
      description: login username
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: Putmongo
      tags:
      - MonggoDB
  /adduser:
    post:
      consumes:
      - application/json
      description: Add new user to database
      parameters:
      - description: Token
        in: header
        name: token
        required: true
        type: string
      - description: model.AddUser
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/model.AddUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: AddUser
      tags:
      - gormDB
  /getfirebase:
    get:
      consumes:
      - application/json
      description: getfirebase
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: Getfirebase
      tags:
      - Firebase
  /getmovies:
    get:
      consumes:
      - application/json
      description: login username
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Movies'
        "400":
          description: Bad Request
          schema: {}
      summary: Getmongo
      tags:
      - MonggoDB
  /login:
    post:
      consumes:
      - application/json
      description: login username
      parameters:
      - description: model.Login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Login'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Token'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: LoginUser
      tags:
      - gormDB
  /putfirebase:
    post:
      consumes:
      - application/json
      description: putfirebase
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: Putfirebase
      tags:
      - Firebase
  /user:
    get:
      consumes:
      - application/json
      description: get username from token
      parameters:
      - description: Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: GetUser
      tags:
      - gormDB
swagger: "2.0"
