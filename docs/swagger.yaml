definitions:
  model.InputGetMessage:
    properties:
      receiver:
        type: string
      sender:
        type: string
    type: object
  model.Login:
    properties:
      Password:
        type: string
      UserID:
        type: string
    type: object
  model.Message:
    properties:
      detail:
        type: string
      receiver:
        type: string
      sender:
        type: string
      time:
        type: integer
    type: object
  model.Movies:
    properties:
      location:
        type: string
      name:
        type: string
      title:
        type: string
    type: object
  model.RegisterUser:
    properties:
      Password:
        type: string
      UserID:
        type: string
      email:
        type: string
    type: object
  model.Token:
    properties:
      Authorization:
        type: string
      type:
        type: string
    type: object
host: apigolang-production.up.railway.app
info:
  contact:
    email: haupham404
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /addmovies:
    post:
      consumes:
      - application/json
      description: login username
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: Putmongo
      tags:
      - MonggoDB
  /adduser:
    post:
      consumes:
      - application/json
      description: Add new user to database
      parameters:
      - default: application/json
        description: application/json
        in: header
        name: Content-Type
        required: true
        type: string
      - default: "1000"
        description: "1000"
        in: header
        name: Content-Length
        required: true
        type: string
      - default: localhost
        description: localhost
        in: header
        name: Host
        required: true
        type: string
      - description: model.RegisterUser
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/model.RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: AddUser
      tags:
      - MonggoDB
  /firebase/getfirebase:
    get:
      consumes:
      - application/json
      description: getfirebase
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: Getfirebase
      tags:
      - Firebase
  /firebase/putfirebase:
    post:
      consumes:
      - application/json
      description: putfirebase
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: Putfirebase
      tags:
      - Firebase
  /getmovies:
    get:
      consumes:
      - application/json
      description: login username
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Movies'
        "400":
          description: Bad Request
          schema: {}
      summary: GetMovies
      tags:
      - MonggoDB
  /gormdb/adduser:
    post:
      consumes:
      - application/json
      description: Add new user to database
      parameters:
      - description: Authorizationc
        in: header
        name: Authorization
        required: true
        type: string
      - description: model.RegisterUser
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/model.RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: AddUser
      tags:
      - gormDB
  /gormdb/login:
    post:
      consumes:
      - application/json
      description: login username
      parameters:
      - description: model.Login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Login'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Token'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: LoginUser
      tags:
      - gormDB
  /gormdb/user:
    get:
      consumes:
      - application/json
      description: get username from token
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: GetUser
      tags:
      - gormDB
  /login:
    post:
      consumes:
      - application/json
      description: login username
      parameters:
      - default: application/json
        description: application/json
        in: header
        name: Content-Type
        required: true
        type: string
      - default: "1000"
        description: "1000"
        in: header
        name: Content-Length
        required: true
        type: string
      - default: localhost
        description: localhost
        in: header
        name: Host
        required: true
        type: string
      - description: model.Login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Login'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Token'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: LoginUser
      tags:
      - MonggoDB
  /logout:
    get:
      consumes:
      - application/json
      description: GetLogout
      parameters:
      - default: application/json
        description: application/json
        in: header
        name: Content-Type
        required: true
        type: string
      - default: "1000"
        description: "1000"
        in: header
        name: Content-Length
        required: true
        type: string
      - default: localhost
        description: localhost
        in: header
        name: Host
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: GetLogout
      tags:
      - MonggoDB
  /message:
    post:
      consumes:
      - application/json
      description: GetMessage
      parameters:
      - default: application/json
        description: application/json
        in: header
        name: Content-Type
        required: true
        type: string
      - default: "1000"
        description: "1000"
        in: header
        name: Content-Length
        required: true
        type: string
      - default: localhost
        description: localhost
        in: header
        name: Host
        required: true
        type: string
      - description: model.InputGetMessage
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/model.InputGetMessage'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: GetMessage
      tags:
      - MonggoDB
  /savemessage:
    post:
      consumes:
      - application/json
      description: SaveMessage
      parameters:
      - default: application/json
        description: application/json
        in: header
        name: Content-Type
        required: true
        type: string
      - default: "1000"
        description: "1000"
        in: header
        name: Content-Length
        required: true
        type: string
      - default: localhost
        description: localhost
        in: header
        name: Host
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: model.Message
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/model.Message'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema: {}
      summary: SaveMessage
      tags:
      - MonggoDB
swagger: "2.0"
